#!/bin/bash

sh=$1
if [ $# -lt 1 ]; then
  echo Usage:  $CMD smart-hostname
  echo smart-hostname - ns2-srt for example
  sh=`hostname -s`
fi

d=/etc/ssh/keys.$$
keys=/tmp/ldap2sshkeys.$$
sg=/tmp/ldap2sshkeys-sg.$$
groups=/tmp/ldap2sshkeys-gr.$$

[ -d $d ] || mkdir $d

ldapsearch -LLL -x -b "o=mirantis,dc=mirantis,dc=net" "(&(objectClass=groupOfNames)(|(&(accessTo=$sh)(trustModel=byhost))(trustModel=fullaccess)))" dn | awk '/dn:/ {print $2}' > $groups
ldapsearch -LLL -x -b "ou=people,ou=external,dc=mirantis,dc=net" "(&(objectClass=groupOfNames)(|(&(accessTo=$sh)(trustModel=byhost))(trustModel=fullaccess)))" dn | awk '/dn:/ {print $2}' >> $groups
ldapsearch -LLL -x -b "ou=people,ou=external,dc=mirantis,dc=net" -o ldif-wrap=no "(&(sshPublicKey=*)(|(&(accessTo=$sh)(trustModel=byhost))(trustModel=fullaccess)(memberOf=cn=it,ou=groups,o=mirantis,dc=mirantis,dc=net)))" uid sshPublicKey > $keys
ldapsearch -LLL -x -b "o=mirantis,dc=mirantis,dc=net" -o ldif-wrap=no "(&(sshPublicKey=*)(|(&(accessTo=$sh)(trustModel=byhost))(trustModel=fullaccess)(memberOf=cn=it,ou=groups,o=mirantis,dc=mirantis,dc=net)))" uid sshPublicKey >> $keys

ldapsearch -LLL -x -b "ou=groups,ou=servers,dc=mirantis,dc=net" "(&(objectClass=gosaGroupOfNames)(member=cn=$sh*))" dn | grep -oP '(?<=.{7,7}).*(?=,ou=groups)' > $sg

for s in `sort -u $sg`; do
   ldapsearch -LLL -x -b "o=mirantis,dc=mirantis,dc=net" "(&(objectClass=groupOfNames)(|(&(accessTo=$s)(trustModel=byhost))(trustModel=fullaccess)))" dn | awk '/dn:/ {print $2}' >> $groups
   ldapsearch -LLL -x -b "ou=people,ou=external,dc=mirantis,dc=net" "(&(objectClass=groupOfNames)(|(&(accessTo=$s)(trustModel=byhost))(trustModel=fullaccess)))" dn | awk '/dn:/ {print $2}' >> $groups
   ldapsearch -LLL -x -b "ou=people,ou=external,dc=mirantis,dc=net" -o ldif-wrap=no "(&(sshPublicKey=*)(|(&(accessTo=$s)(trustModel=byhost))(trustModel=fullaccess)(memberOf=cn=it,ou=groups,o=mirantis,dc=mirantis,dc=net)))" uid sshPublicKey >> $keys
   ldapsearch -LLL -x -b "o=mirantis,dc=mirantis,dc=net" -o ldif-wrap=no "(&(sshPublicKey=*)(|(&(accessTo=$s)(trustModel=byhost))(trustModel=fullaccess)(memberOf=cn=it,ou=groups,o=mirantis,dc=mirantis,dc=net)))" uid sshPublicKey >> $keys
done

while read group; do
    ldapsearch -x -LLL -b "o=mirantis,dc=mirantis,dc=net" -o ldif-wrap=no "(&(sshPublicKey=*)(memberOf=$group))" uid sshPublicKey >> $keys
done < $groups

sed -i '/dn: uid/d' $keys
sed -i -e ':a;N;$!ba;s/\n/ /g' -e "s/uid: /\n/g" -e "s/sshPublicKey: //g" $keys

while read line; do
    u=`echo $line | awk '{print $1}'`
    k=`echo $line | awk '{$1=""; print $0}' | awk '{for(i=1;i<=NF;i++) if ($i~/sshPublicKey::/) "echo "$((i+1))" | base64 -d "|getline $((i+1))}1' | sed 's/sshPublicKey:: //g'`
    [ -n "${u}" ] && [ -n "${k}" ] && echo $k > $d/$u && (sed -i "s/ssh-rsa/\nssh-rsa/2g" $d/$u)
done < $keys

if (grep -E '(dss|rsa)' $d/*>/dev/null);then
        [ -d /etc/ssh/keys.old ] && rm -rf /etc/ssh/keys.old
        [ -d /etc/ssh/keys ] && mv /etc/ssh/keys /etc/ssh/keys.old
        mv $d /etc/ssh/keys
        rm -rf /etc/ssh/keys.*
fi

rm -f $keys $groups $sg
